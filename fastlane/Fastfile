# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

setup_ci if ENV['CI']

platform :android do
  desc "Build an .apk and an .aab with an upcoming version code"
  lane :build do |options|
    package_name =
      case options[:flavor]
      when "Prod"
        "com.mbta.tid.mbta_app"
      when "Staging"
        "com.mbta.tid.mbta_app.staging"
      else
        raise "Unknown flavor #{options[:flavor]}"
      end

  last_version_code = if options[:build_type] == "Debug"
      0
    else
      google_play_track_version_codes(
            package_name: package_name,
            track: "internal",
          ).max
    end

    next_version_code = last_version_code + 1
    properties = if options[:build_type] == "Debug"
      { "android.injected.version.code" => next_version_code }
    else
      {
        "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
        "android.injected.version.code" => next_version_code,
      }
    end
    gradle(
      task: 'assemble',
      flavor: options[:flavor],
      build_type: options[:build_type],
      properties: properties
    )
    gradle(
      task: 'bundle',
      flavor: options[:flavor],
      build_type: options[:build_type],
      properties: properties
    )
  end

  desc "Deploy a new version to Google Play for internal testing"
  lane :internal do |options|
    package_name =
      case options[:flavor]
      when "Prod"
        "com.mbta.tid.mbta_app"
      when "Staging"
        "com.mbta.tid.mbta_app.staging"
      else
        raise "Unknown flavor #{options[:flavor]}"
      end
    flavor = options[:flavor].downcase
    upload_to_play_store(
      package_name: package_name,
      track: "internal",
      aab: "androidApp/build/outputs/bundle/#{flavor}Release/androidApp-#{flavor}-release.aab",
    )
  end
end
