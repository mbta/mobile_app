name: iOS tests

on:
  workflow_call:
    inputs:
      skip-everything:
        description: "Skips all the individual steps so the job passes quickly"
        required: false
        default: false
        type: boolean
    secrets:
      SENTRY_DSN:
        required: true
      FIREBASE_KEY:
        required: true
      GOOGLE_APP_ID_IOS:
        required: true

jobs:
  test-ios:
    name: Test for iOS
    runs-on: macos-14-xlarge
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        if: ${{ !inputs.skip-everything }}
      - uses: ./.github/actions/setup
        if: ${{ !inputs.skip-everything }}
        with:
          for: ios-test
      - name: Install CocoaPods dependencies
        if: ${{ !inputs.skip-everything }}
        run: |
          ./gradlew :shared:generateDummyFramework
          pushd iosApp
          bundle exec pod install
          popd
          bundle exec ./gradlew :shared:podInstallSyntheticIos
      - name: shared checks & unit tests
        if: ${{ !inputs.skip-everything }}
        run: ./gradlew shared:iosSimulatorArm64Test shared:iosX64Test
        env:
          GH_TOKEN: ${{ github.token }}
      - uses: actions/upload-artifact@v4
        if: failure() && !inputs.skip-everything
        with:
          name: ios-shared-reports
          path: shared/build/reports
      - name: Add build environment variables
        if: ${{ !inputs.skip-everything }}
        run: |
          {
            echo "export SENTRY_DSN=${SENTRY_DSN}"
            echo "export SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT}"
            echo "export FIREBASE_KEY=${FIREBASE_KEY}"
            echo "export GOOGLE_APP_ID_IOS=${GOOGLE_APP_ID_IOS}"
          } >> .envrc
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ENVIRONMENT: staging
          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
          GOOGLE_APP_ID_IOS: ${{ secrets.GOOGLE_APP_ID_IOS }}
      - name: Run emulator tests
        if: ${{ !inputs.skip-everything }}
        run: |
          bundle exec fastlane ios test \
            xcodebuild_formatter:"xcbeautify --renderer github-actions"
      - uses: actions/upload-artifact@v4
        if: failure() && !inputs.skip-everything
        with:
          name: ios-ios-results
          path: fastlane/test_output/*
